2. Пространство имен это область определенная пакетами. 
Благодаря пространству имен можно избежать конфликта с одинаковыми именами классов. 

3. папках (каталогах)

4. В том, что модификатор доступа protected означает, что метод или переменная доступны в подклассах этого класса находяшиеся в любом пакете.
Класс нельзя объявить с модификатором доступа protected!
Модификаторы доступа protected и default схожи тем, что методы и переменные доступны классам объявленных в том же пакете, что и этот класс.

5. Первый способ: использовать ключевое слово import, т.е. импортировать эти классы из текущего пакета:
import имя_пакета.имя_класса1;
import имя_пакета.имя_класса2;

Второй способ: использовать ключевое слово import, но импортировать полностью пакет со всеми классами:
import имя_пакета.*;

Третий способ: использовать точечную нотацию для каждого обращения к классу:
имя_пакета.имя_класса1 класс1 = new имя_пакета.имя_класса1();

6. наверное интерфейсы

7. Один и тот же интерфейс может реализовать множество классов.
Класс может реализовать множество интерфейсов.

8. Может

10. Переменные по сути являются константами. Для обращения к константе необходимо использовать точечную нотацию, предварительно указав имя интерфейса:
имя_интерфейса.переменная_интерфейса;
Преимущества в том, что можно создать интерфейс с константами, затем в нужном классе реализовать данный интерфейс и затем напрямую обращаться к этим переменным.


11. Верно

12. java.lang

13. default

14. да

15. добавить метод по умолчанию и предоставить реализацию по умолчанию, либо вывести какое то сообщение, чтобы в нужных классах реализовали этот метод
default reset(){}

16. Статический метод интерфейса вызывается с помощью точечной нотации:
имя_интерфейса.имя_статического_класса;

17. Да, начиная с JDK9