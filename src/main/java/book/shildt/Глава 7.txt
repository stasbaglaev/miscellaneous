1. Суперкласс не имеет доступа к членам подкласса. Подкласс имеет доступ к членам подкласса.
3. Для того, чтобы предотвратить обращение к членам суперкласса изз подкласса, то их нужно объявить в модификатором доступа private.
4. Ключевое слово super используется в двух случаях:
	1. для вызова конструктора суперкласса из подкласса
	2. для обращения к членам суперкласса из подкласса (в том числе и в том случае, если происходит перекрытие членов 
	   (т.е. и в суперклассе и в подклассе используются поля и методы с одинаковыми названиями))
5. Вызов конструкторов происходит по иерархии классов, т.е. сначала вызывается конструктор класса Alpha, затем конструктор класса Beta, 
    и затем в последнюю очередь вызывается конструктор класса Gamma.
6. Переменная ссылки на суперкласс может указывать на объект подкласса
	1. При создании конструктора в суперклассе, то в этот конструктор можно передать объект подкласса, и в таком случае конструтор 
	   проинициализирует переменные на основе передаваемого объекта (т.е. будет использовать только те поля, которые существуют в суперклассе)
	2. Можно создать объект подкласса, а в переменную занести ссылку на суперкласс, в таком случае, при вызове методов на объекта подкласса 
	   будет вызывать переопределенный вариант из подкласса.
		
7. Абстрактный класс это класс объявленный с помощью ключевого слово abstract. Это не завершенный класс (концепция), объект которого нельзя создать. 	
8. Для того, чтобы предотвратить переопределение метода и наследование класса необходимо объявить метод и класс с помощью ключевого слова final.
9. Перечисленные механизмы используется для поддержки полиморфизма таким образом, чтобы нужные методы вызывалисьиз рантайма 
   (непосредственно в тот момент времени, когда программа уже выполняется)
	Без наследования нет полиморфизма!
	С помощью наследования мы можем использовать уже написанный код!
	С помощью переопределения методов достигается полиформирзм (динамический полиморфизм)
	С помощью абстрактных классов создаются абстрактные методы (методы без тела), и эти методы обязательно должны быть переопределены в подклассах.
10. Для всех классов суперклассом является класс Object.
11. Верно.	
12. Для создания именованной константы необходимо использовать ключевое слово final.
	publicstaticfinalint CONSTANT - глобальная константа, доступ к которой осуществляется через имя класса 
	(создается до создания объекта этого класса.Одна переменная для всех объектов этого класса)
	finalint CONSTANT - константа, которая инициализируется для каждого объекта этого класса.
	
