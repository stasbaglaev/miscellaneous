1. Throwable
2. С помощью ключевого слова try объявляется блок кода в котором возможно генерирование исключения (отслеживаются исключения)
   С помощью ключевого слова catch объявляется блок кода в котором перехватываются исключения
   Блоки try и catch используются совместно.
3. Отсутствие блока try
4. Программа завершится аварийно, а в консоль будет выведена трассировка стека исключений.
5. Блок catch (B exc){} является недостижимым кодом, т.к. в первом блоке catch указан суперкласс исключения, который перехватывает
исключения типа А, и исключения типа В.
6. Может.
7. Нет. Finally обозначает блок кода, который будет выполнен по завершению блока try, в том случае, если в блоке try не было сгенерировано исключение, а также
в том случае, если исключение было сгенерировано. Короче говоря, код обозначенный в блоке finally будет выполнен всегда, в том числе
и перед аварийным завершением программы (когда исключение не было перехвачено).
8. Проверяемые исключения (те, которые наследуются от класса Exception, кроме класса RuntimeException и его наследников. Также 
к проверяемым исключениям относится класс Throwable).
9. В объявлении класса отсутствует ключевое слово extends, которое указывает, что данный класс наследуется от класса Throwable или
его подклассов.
10. 
11. 1. Низкоуровневые ошибки (ошибки JVM), 2.Ошибки в программе, 3. С помощью оператора throw. 
12. Error и Exception
13. Групповой перехват исключений это средство с помощью которого в одном блоке catch можно перехватывать несколько исключений.
Для этого необходимо использовать побитовый оператор ИЛИ |
catch(Exception1 | Exception2 exception ){} 
14. Обязательно не следует, но в целом возможно.